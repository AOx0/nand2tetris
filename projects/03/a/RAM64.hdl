// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
        DMux8Way(in=load, sel=address[3..5], a=s000, b=s001, c=s010, d=s011, e=s100, f=s101, g=s110, h=s111);
        RAM8(in=in, load=s000, address=address[0..2], out=r000);
        RAM8(in=in, load=s001, address=address[0..2], out=r001);
        RAM8(in=in, load=s010, address=address[0..2], out=r010);
        RAM8(in=in, load=s011, address=address[0..2], out=r011);
        RAM8(in=in, load=s100, address=address[0..2], out=r100);
        RAM8(in=in, load=s101, address=address[0..2], out=r101);
        RAM8(in=in, load=s110, address=address[0..2], out=r110);
        RAM8(in=in, load=s111, address=address[0..2], out=r111);
        Mux8Way16(a=r000, b=r001, c=r010, d=r011, e=r100, f=r101, g=r110, h=r111, sel=address[3..5], out=out);
}